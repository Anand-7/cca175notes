The folder /user/cloudera/rawdata/movielens/tags contains a data.
Create a new folder /user/cloudera/rawdata/movielens/tags_new that contains the exact number of records from the former to the latter with a new file format (Parquet).
After the solution, both folders must contain the same number of records. 
Note that the header in the folder /user/cloudera/rawdata/movielens/tags does not count as a record


Hive
=====
create external table tag 
(userId int, movieId int, tag string,  timestamp bigint)
row format delimited 
fields terminated by ','
location '/user/cloudera/rawdata/movielens/tags';

create external table tag_pq
(userId int, movieId int, tag string,  timestamp bigint)
stored as parquet
location '/user/cloudera/rawdata/movielens/tags_new';

insert overwrite table tag_pq
select * from tag where userid is not null 

Spark
==============

case class Tag(val userId: Int, val movieId:Int, val tag: String, val timestamp: Long) extends java.io.Serializable

val data = sc.textFile("/user/cloudera/rawdata/movielens/tags")
val processed = data.filter(!_.startsWith("userId")).map((l : String) => {
val parts = l.split(",")
Tag(parts(0).toInt, parts(1).toInt, parts(2), parts(3).toLong)
})

val df = processed.toDF.write.parquet("/user/cloudera/rawdata/movielens/tags_new_spark")




CLASS WORK
===================
The folder /user/cloudera/rawdata/movielens/ratings contains a movie ratings. The format of this dataset is comma separated value.
Create a new folder /user/cloudera/rawdata/movielens/ratings_new that contains the exact number of records with the former with the same file type but being tab delimited.
After the solution, both folders must contain the same number of records. 
Note that the header in the folder /user/cloudera/rawdata/movielens/ratings does not count as a record

val data = sc.textFile("/user/cloudera/rawdata/movielens/ratings")
val processed = data.filter(!_.startsWith("userId")).map(l => {
val p = l.split(",")
p(0) +"\t"+ p(1) +"\t" + p(2) +"\t" + p(3)
})
processed.saveAsTextFile("/user/cloudera/rawdata/movielens/ratings_new")

